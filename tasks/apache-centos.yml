---
- name: Install packages
  yum:
    name: "{{ apache_packages }}"
    state: present

- name: Create vhost document root paths
  file:
    path: "{{ apache_document.parent }}/{{ item.servername }}/{{
      apache_document.child.html }}"
    state: directory
  loop: "{{ apache_vhosts }}"

- name: Create vhost document root paths - SSL
  file:
    path: "{{ apache_document.parent }}/{{ item.servername }}/{{
      apache_document.child.html }}"
    state: directory
  loop: "{{ apache_vhosts_ssl }}"

- name: Create vhost log directories
  file:
    path: "{{ apache_document.parent }}/{{ item.servername }}/{{
      apache_document.child.log }}"
    state: directory
  loop: "{{ apache_vhosts }}"

- name: Create vhost log directories - SSL
  file:
    path: "{{ apache_document.parent }}/{{ item.servername }}/{{
      apache_document.child.log }}"
    state: directory
  loop: "{{ apache_vhosts_ssl }}"

- name: Allow Apache to write logs in to the custom directories
  shell: "chcon -t \"httpd_log_t\" {{ apache_document.parent }}/{{
    item.servername }}/{{ apache_document.child.log }}"
  become_user: root
  args:
    warn: false
  loop: "{{ apache_vhosts }}"

- name: Allow Apache to write logs in to the custom directories - SSL
  shell: "chcon -t \"httpd_log_t\" {{ apache_document.parent }}/{{
    item.servername }}/{{ apache_document.child.log }}"
  become_user: root
  args:
    warn: false
  loop: "{{ apache_vhosts_ssl }}"

- name: Provide index files
  template:
    src: index.html.j2
    dest: "{{ apache_document.parent }}/{{ item.servername }}/{{ 
      apache_document.child.html }}/index.html"
  loop: "{{ apache_vhosts }}"

- name: Provide index files - SSL
  template:
    src: index.html.j2
    dest: "{{ apache_document.parent }}/{{ item.servername }}/{{ 
      apache_document.child.html }}/index.html"
  loop: "{{ apache_vhosts_ssl }}"

- name: Provide vhost configuration files
  template:
    src: vhost.conf.j2
    dest: "{{ apache_conf_path }}/{{ item.servername }}.conf"
  loop: "{{ apache_vhosts }}"
  notify: Reload apache

- name: Provide vhost configuration files - SSL
  template:
    src: vhost-ssl.conf.j2
    dest: "{{ apache_conf_path }}/{{ item.servername }}.conf"
  loop: "{{ apache_vhosts_ssl }}"
  notify: Reload apache

- name: Stat SSL certificate
  stat:
    path: "{{ apache_ssl_cert_path }}/{{ apache_ssl_cert_filename }}.crt"
  register: result

- import_tasks: apache-nodist-ssl-cert.yml
  when: apache_ssl_cert_generate and not result.stat.exists

- name: Enable the service
  service:
    name: "{{ apache_unit_name }}"
    enabled: yes
